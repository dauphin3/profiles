{"version":3,"file":"create-profile-stories.0933982e.iframe.bundle.js","mappings":";AA8DA;;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;;AAGA;AAEA;ACnFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACiIA;;AAYA;AACA;;;;;;AAMA;;;;;;;AAOA;AACA;;AAEA;;AAGA;ACjKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACqBA;;;;;;;AAaA;;;;;;ACeA;;;AAGA;AACA;AACA;;;AAKA;;ACmBA;AACA;AACA;AACA;;;AAIA;;;;AAOA;;;;;;AAMA;;AAGA;AACA;AACA;;;;AAKA;;AAEA;AACA;AACA;;;;;AAOA;;;AAKA;;;AAIA;;AAEA;;AAEA;;;AAIA;;;;AAKA;ACzIA;;;AAOA","sources":["webpack://@holochain-open-dev/profiles-dev/./node_modules/@shoelace-style/shoelace/dist/chunks/chunk.KRP3ULQL.js","webpack://@holochain-open-dev/profiles-dev/./node_modules/@shoelace-style/shoelace/dist/chunks/chunk.UL4X2GHI.js","webpack://@holochain-open-dev/profiles-dev/./node_modules/@shoelace-style/shoelace/dist/chunks/chunk.UTZKJDOX.js","webpack://@holochain-open-dev/profiles-dev/./node_modules/@shoelace-style/shoelace/dist/chunks/chunk.VRFUPY5H.js","webpack://@holochain-open-dev/profiles-dev/./node_modules/@shoelace-style/shoelace/dist/chunks/chunk.BZVXMWBD.js","webpack://@holochain-open-dev/profiles-dev/./node_modules/@shoelace-style/shoelace/dist/chunks/chunk.OGSWONUA.js","webpack://@holochain-open-dev/profiles-dev/../../src/elements/create-profile.ts","webpack://@holochain-open-dev/profiles-dev/../../src/elements/edit-profile.ts","webpack://@holochain-open-dev/profiles-dev/./stories/create-profile.stories.js"],"sourcesContent":["import {\n  icon_button_styles_default\n} from \"./chunk.UL4X2GHI.js\";\nimport {\n  i as i2,\n  n\n} from \"./chunk.IJY6XTKC.js\";\nimport {\n  l\n} from \"./chunk.V47DPYLL.js\";\nimport {\n  o\n} from \"./chunk.ORW72H2K.js\";\nimport {\n  ShoelaceElement,\n  e,\n  e2,\n  i,\n  t\n} from \"./chunk.ROLL4627.js\";\nimport {\n  __decorateClass\n} from \"./chunk.LKA3TPUC.js\";\n\n// src/components/icon-button/icon-button.ts\nvar SlIconButton = class extends ShoelaceElement {\n  constructor() {\n    super(...arguments);\n    this.hasFocus = false;\n    this.label = \"\";\n    this.disabled = false;\n  }\n  handleBlur() {\n    this.hasFocus = false;\n    this.emit(\"sl-blur\");\n  }\n  handleFocus() {\n    this.hasFocus = true;\n    this.emit(\"sl-focus\");\n  }\n  handleClick(event) {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n  /** Simulates a click on the icon button. */\n  click() {\n    this.button.click();\n  }\n  /** Sets focus on the icon button. */\n  focus(options) {\n    this.button.focus(options);\n  }\n  /** Removes focus from the icon button. */\n  blur() {\n    this.button.blur();\n  }\n  render() {\n    const isLink = this.href ? true : false;\n    const tag = isLink ? i2`a` : i2`button`;\n    return n`\n      <${tag}\n        part=\"base\"\n        class=${o({\n      \"icon-button\": true,\n      \"icon-button--disabled\": !isLink && this.disabled,\n      \"icon-button--focused\": this.hasFocus\n    })}\n        ?disabled=${l(isLink ? void 0 : this.disabled)}\n        type=${l(isLink ? void 0 : \"button\")}\n        href=${l(isLink ? this.href : void 0)}\n        target=${l(isLink ? this.target : void 0)}\n        download=${l(isLink ? this.download : void 0)}\n        rel=${l(isLink && this.target ? \"noreferrer noopener\" : void 0)}\n        role=${l(isLink ? void 0 : \"button\")}\n        aria-disabled=${this.disabled ? \"true\" : \"false\"}\n        aria-label=\"${this.label}\"\n        tabindex=${this.disabled ? \"-1\" : \"0\"}\n        @blur=${this.handleBlur}\n        @focus=${this.handleFocus}\n        @click=${this.handleClick}\n      >\n        <sl-icon\n          class=\"icon-button__icon\"\n          name=${l(this.name)}\n          library=${l(this.library)}\n          src=${l(this.src)}\n          aria-hidden=\"true\"\n        ></sl-icon>\n      </${tag}>\n    `;\n  }\n};\nSlIconButton.styles = icon_button_styles_default;\n__decorateClass([\n  i(\".icon-button\")\n], SlIconButton.prototype, \"button\", 2);\n__decorateClass([\n  t()\n], SlIconButton.prototype, \"hasFocus\", 2);\n__decorateClass([\n  e2()\n], SlIconButton.prototype, \"name\", 2);\n__decorateClass([\n  e2()\n], SlIconButton.prototype, \"library\", 2);\n__decorateClass([\n  e2()\n], SlIconButton.prototype, \"src\", 2);\n__decorateClass([\n  e2()\n], SlIconButton.prototype, \"href\", 2);\n__decorateClass([\n  e2()\n], SlIconButton.prototype, \"target\", 2);\n__decorateClass([\n  e2()\n], SlIconButton.prototype, \"download\", 2);\n__decorateClass([\n  e2()\n], SlIconButton.prototype, \"label\", 2);\n__decorateClass([\n  e2({ type: Boolean, reflect: true })\n], SlIconButton.prototype, \"disabled\", 2);\nSlIconButton = __decorateClass([\n  e(\"sl-icon-button\")\n], SlIconButton);\n\nexport {\n  SlIconButton\n};\n","import {\n  component_styles_default\n} from \"./chunk.BCEYT3RT.js\";\nimport {\n  i\n} from \"./chunk.DUT32TWM.js\";\n\n// src/components/icon-button/icon-button.styles.ts\nvar icon_button_styles_default = i`\n  ${component_styles_default}\n\n  :host {\n    display: inline-block;\n    color: var(--sl-color-neutral-600);\n  }\n\n  .icon-button {\n    flex: 0 0 auto;\n    display: flex;\n    align-items: center;\n    background: none;\n    border: none;\n    border-radius: var(--sl-border-radius-medium);\n    font-size: inherit;\n    color: inherit;\n    padding: var(--sl-spacing-x-small);\n    cursor: pointer;\n    transition: var(--sl-transition-x-fast) color;\n    -webkit-appearance: none;\n  }\n\n  .icon-button:hover:not(.icon-button--disabled),\n  .icon-button:focus-visible:not(.icon-button--disabled) {\n    color: var(--sl-color-primary-600);\n  }\n\n  .icon-button:active:not(.icon-button--disabled) {\n    color: var(--sl-color-primary-700);\n  }\n\n  .icon-button:focus {\n    outline: none;\n  }\n\n  .icon-button--disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  .icon-button:focus-visible {\n    outline: var(--sl-focus-ring);\n    outline-offset: var(--sl-focus-ring-offset);\n  }\n\n  .icon-button__icon {\n    pointer-events: none;\n  }\n`;\n\nexport {\n  icon_button_styles_default\n};\n","import {\n  component_styles_default\n} from \"./chunk.BCEYT3RT.js\";\nimport {\n  i\n} from \"./chunk.DUT32TWM.js\";\n\n// src/components/alert/alert.styles.ts\nvar alert_styles_default = i`\n  ${component_styles_default}\n\n  :host {\n    display: contents;\n\n    /* For better DX, we'll reset the margin here so the base part can inherit it */\n    margin: 0;\n  }\n\n  .alert {\n    position: relative;\n    display: flex;\n    align-items: stretch;\n    background-color: var(--sl-panel-background-color);\n    border: solid var(--sl-panel-border-width) var(--sl-panel-border-color);\n    border-top-width: calc(var(--sl-panel-border-width) * 3);\n    border-radius: var(--sl-border-radius-medium);\n    font-family: var(--sl-font-sans);\n    font-size: var(--sl-font-size-small);\n    font-weight: var(--sl-font-weight-normal);\n    line-height: 1.6;\n    color: var(--sl-color-neutral-700);\n    margin: inherit;\n  }\n\n  .alert:not(.alert--has-icon) .alert__icon,\n  .alert:not(.alert--closable) .alert__close-button {\n    display: none;\n  }\n\n  .alert__icon {\n    flex: 0 0 auto;\n    display: flex;\n    align-items: center;\n    font-size: var(--sl-font-size-large);\n    padding-inline-start: var(--sl-spacing-large);\n  }\n\n  .alert--primary {\n    border-top-color: var(--sl-color-primary-600);\n  }\n\n  .alert--primary .alert__icon {\n    color: var(--sl-color-primary-600);\n  }\n\n  .alert--success {\n    border-top-color: var(--sl-color-success-600);\n  }\n\n  .alert--success .alert__icon {\n    color: var(--sl-color-success-600);\n  }\n\n  .alert--neutral {\n    border-top-color: var(--sl-color-neutral-600);\n  }\n\n  .alert--neutral .alert__icon {\n    color: var(--sl-color-neutral-600);\n  }\n\n  .alert--warning {\n    border-top-color: var(--sl-color-warning-600);\n  }\n\n  .alert--warning .alert__icon {\n    color: var(--sl-color-warning-600);\n  }\n\n  .alert--danger {\n    border-top-color: var(--sl-color-danger-600);\n  }\n\n  .alert--danger .alert__icon {\n    color: var(--sl-color-danger-600);\n  }\n\n  .alert__message {\n    flex: 1 1 auto;\n    display: block;\n    padding: var(--sl-spacing-large);\n    overflow: hidden;\n  }\n\n  .alert__close-button {\n    flex: 0 0 auto;\n    display: flex;\n    align-items: center;\n    font-size: var(--sl-font-size-medium);\n    padding-inline-end: var(--sl-spacing-medium);\n  }\n`;\n\nexport {\n  alert_styles_default\n};\n","import {\n  getAnimation,\n  setDefaultAnimation\n} from \"./chunk.OAQT3AUQ.js\";\nimport {\n  waitForEvent\n} from \"./chunk.B4BZKR24.js\";\nimport {\n  animateTo,\n  stopAnimations\n} from \"./chunk.65AZ2BGN.js\";\nimport {\n  HasSlotController\n} from \"./chunk.3IYPB6RR.js\";\nimport {\n  o\n} from \"./chunk.ORW72H2K.js\";\nimport {\n  LocalizeController\n} from \"./chunk.Q3I3TA2Y.js\";\nimport {\n  alert_styles_default\n} from \"./chunk.UTZKJDOX.js\";\nimport {\n  watch\n} from \"./chunk.VQ3XOPCT.js\";\nimport {\n  ShoelaceElement,\n  e,\n  e2,\n  i\n} from \"./chunk.ROLL4627.js\";\nimport {\n  y\n} from \"./chunk.DUT32TWM.js\";\nimport {\n  __decorateClass\n} from \"./chunk.LKA3TPUC.js\";\n\n// src/components/alert/alert.ts\nvar toastStack = Object.assign(document.createElement(\"div\"), { className: \"sl-toast-stack\" });\nvar SlAlert = class extends ShoelaceElement {\n  constructor() {\n    super(...arguments);\n    this.hasSlotController = new HasSlotController(this, \"icon\", \"suffix\");\n    this.localize = new LocalizeController(this);\n    this.open = false;\n    this.closable = false;\n    this.variant = \"primary\";\n    this.duration = Infinity;\n  }\n  firstUpdated() {\n    this.base.hidden = !this.open;\n  }\n  restartAutoHide() {\n    clearTimeout(this.autoHideTimeout);\n    if (this.open && this.duration < Infinity) {\n      this.autoHideTimeout = window.setTimeout(() => this.hide(), this.duration);\n    }\n  }\n  handleCloseClick() {\n    this.hide();\n  }\n  handleMouseMove() {\n    this.restartAutoHide();\n  }\n  async handleOpenChange() {\n    if (this.open) {\n      this.emit(\"sl-show\");\n      if (this.duration < Infinity) {\n        this.restartAutoHide();\n      }\n      await stopAnimations(this.base);\n      this.base.hidden = false;\n      const { keyframes, options } = getAnimation(this, \"alert.show\", { dir: this.localize.dir() });\n      await animateTo(this.base, keyframes, options);\n      this.emit(\"sl-after-show\");\n    } else {\n      this.emit(\"sl-hide\");\n      clearTimeout(this.autoHideTimeout);\n      await stopAnimations(this.base);\n      const { keyframes, options } = getAnimation(this, \"alert.hide\", { dir: this.localize.dir() });\n      await animateTo(this.base, keyframes, options);\n      this.base.hidden = true;\n      this.emit(\"sl-after-hide\");\n    }\n  }\n  handleDurationChange() {\n    this.restartAutoHide();\n  }\n  /** Shows the alert. */\n  async show() {\n    if (this.open) {\n      return void 0;\n    }\n    this.open = true;\n    return waitForEvent(this, \"sl-after-show\");\n  }\n  /** Hides the alert */\n  async hide() {\n    if (!this.open) {\n      return void 0;\n    }\n    this.open = false;\n    return waitForEvent(this, \"sl-after-hide\");\n  }\n  /**\n   * Displays the alert as a toast notification. This will move the alert out of its position in the DOM and, when\n   * dismissed, it will be removed from the DOM completely. By storing a reference to the alert, you can reuse it by\n   * calling this method again. The returned promise will resolve after the alert is hidden.\n   */\n  async toast() {\n    return new Promise((resolve) => {\n      if (toastStack.parentElement === null) {\n        document.body.append(toastStack);\n      }\n      toastStack.appendChild(this);\n      requestAnimationFrame(() => {\n        this.clientWidth;\n        this.show();\n      });\n      this.addEventListener(\n        \"sl-after-hide\",\n        () => {\n          toastStack.removeChild(this);\n          resolve();\n          if (toastStack.querySelector(\"sl-alert\") === null) {\n            toastStack.remove();\n          }\n        },\n        { once: true }\n      );\n    });\n  }\n  render() {\n    return y`\n      <div\n        part=\"base\"\n        class=${o({\n      alert: true,\n      \"alert--open\": this.open,\n      \"alert--closable\": this.closable,\n      \"alert--has-icon\": this.hasSlotController.test(\"icon\"),\n      \"alert--primary\": this.variant === \"primary\",\n      \"alert--success\": this.variant === \"success\",\n      \"alert--neutral\": this.variant === \"neutral\",\n      \"alert--warning\": this.variant === \"warning\",\n      \"alert--danger\": this.variant === \"danger\"\n    })}\n        role=\"alert\"\n        aria-hidden=${this.open ? \"false\" : \"true\"}\n        @mousemove=${this.handleMouseMove}\n      >\n        <slot name=\"icon\" part=\"icon\" class=\"alert__icon\"></slot>\n\n        <slot part=\"message\" class=\"alert__message\" aria-live=\"polite\"></slot>\n\n        ${this.closable ? y`\n              <sl-icon-button\n                part=\"close-button\"\n                exportparts=\"base:close-button__base\"\n                class=\"alert__close-button\"\n                name=\"x-lg\"\n                library=\"system\"\n                label=${this.localize.term(\"close\")}\n                @click=${this.handleCloseClick}\n              ></sl-icon-button>\n            ` : \"\"}\n      </div>\n    `;\n  }\n};\nSlAlert.styles = alert_styles_default;\n__decorateClass([\n  i('[part~=\"base\"]')\n], SlAlert.prototype, \"base\", 2);\n__decorateClass([\n  e2({ type: Boolean, reflect: true })\n], SlAlert.prototype, \"open\", 2);\n__decorateClass([\n  e2({ type: Boolean, reflect: true })\n], SlAlert.prototype, \"closable\", 2);\n__decorateClass([\n  e2({ reflect: true })\n], SlAlert.prototype, \"variant\", 2);\n__decorateClass([\n  e2({ type: Number })\n], SlAlert.prototype, \"duration\", 2);\n__decorateClass([\n  watch(\"open\", { waitUntilFirstUpdate: true })\n], SlAlert.prototype, \"handleOpenChange\", 1);\n__decorateClass([\n  watch(\"duration\")\n], SlAlert.prototype, \"handleDurationChange\", 1);\nSlAlert = __decorateClass([\n  e(\"sl-alert\")\n], SlAlert);\nsetDefaultAnimation(\"alert.show\", {\n  keyframes: [\n    { opacity: 0, scale: 0.8 },\n    { opacity: 1, scale: 1 }\n  ],\n  options: { duration: 250, easing: \"ease\" }\n});\nsetDefaultAnimation(\"alert.hide\", {\n  keyframes: [\n    { opacity: 1, scale: 1 },\n    { opacity: 0, scale: 0.8 }\n  ],\n  options: { duration: 250, easing: \"ease\" }\n});\n\nexport {\n  SlAlert\n};\n","import {\n  component_styles_default\n} from \"./chunk.BCEYT3RT.js\";\nimport {\n  i\n} from \"./chunk.DUT32TWM.js\";\n\n// src/components/card/card.styles.ts\nvar card_styles_default = i`\n  ${component_styles_default}\n\n  :host {\n    --border-color: var(--sl-color-neutral-200);\n    --border-radius: var(--sl-border-radius-medium);\n    --border-width: 1px;\n    --padding: var(--sl-spacing-large);\n\n    display: inline-block;\n  }\n\n  .card {\n    display: flex;\n    flex-direction: column;\n    background-color: var(--sl-panel-background-color);\n    box-shadow: var(--sl-shadow-x-small);\n    border: solid var(--border-width) var(--border-color);\n    border-radius: var(--border-radius);\n  }\n\n  .card__image {\n    display: flex;\n    border-top-left-radius: var(--border-radius);\n    border-top-right-radius: var(--border-radius);\n    margin: calc(-1 * var(--border-width));\n    overflow: hidden;\n  }\n\n  .card__image::slotted(img) {\n    display: block;\n    width: 100%;\n  }\n\n  .card:not(.card--has-image) .card__image {\n    display: none;\n  }\n\n  .card__header {\n    display: block;\n    border-bottom: solid var(--border-width) var(--border-color);\n    padding: calc(var(--padding) / 2) var(--padding);\n  }\n\n  .card:not(.card--has-header) .card__header {\n    display: none;\n  }\n\n  .card:not(.card--has-image) .card__header {\n    border-top-left-radius: var(--border-radius);\n    border-top-right-radius: var(--border-radius);\n  }\n\n  .card__body {\n    display: block;\n    padding: var(--padding);\n  }\n\n  .card--has-footer .card__footer {\n    display: block;\n    border-top: solid var(--border-width) var(--border-color);\n    padding: var(--padding);\n  }\n\n  .card:not(.card--has-footer) .card__footer {\n    display: none;\n  }\n`;\n\nexport {\n  card_styles_default\n};\n","import {\n  card_styles_default\n} from \"./chunk.BZVXMWBD.js\";\nimport {\n  HasSlotController\n} from \"./chunk.3IYPB6RR.js\";\nimport {\n  o\n} from \"./chunk.ORW72H2K.js\";\nimport {\n  ShoelaceElement,\n  e\n} from \"./chunk.ROLL4627.js\";\nimport {\n  y\n} from \"./chunk.DUT32TWM.js\";\nimport {\n  __decorateClass\n} from \"./chunk.LKA3TPUC.js\";\n\n// src/components/card/card.ts\nvar SlCard = class extends ShoelaceElement {\n  constructor() {\n    super(...arguments);\n    this.hasSlotController = new HasSlotController(this, \"footer\", \"header\", \"image\");\n  }\n  render() {\n    return y`\n      <div\n        part=\"base\"\n        class=${o({\n      card: true,\n      \"card--has-footer\": this.hasSlotController.test(\"footer\"),\n      \"card--has-image\": this.hasSlotController.test(\"image\"),\n      \"card--has-header\": this.hasSlotController.test(\"header\")\n    })}\n      >\n        <slot name=\"image\" part=\"image\" class=\"card__image\"></slot>\n        <slot name=\"header\" part=\"header\" class=\"card__header\"></slot>\n        <slot part=\"body\" class=\"card__body\"></slot>\n        <slot name=\"footer\" part=\"footer\" class=\"card__footer\"></slot>\n      </div>\n    `;\n  }\n};\nSlCard.styles = card_styles_default;\nSlCard = __decorateClass([\n  e(\"sl-card\")\n], SlCard);\n\nexport {\n  SlCard\n};\n","import { html, LitElement } from \"lit\";\nimport { property, customElement } from \"lit/decorators.js\";\nimport { consume } from \"@lit-labs/context\";\nimport { localized, msg } from \"@lit/localize\";\nimport { sharedStyles, notifyError } from \"@holochain-open-dev/elements\";\n\nimport \"@shoelace-style/shoelace/dist/components/alert/alert.js\";\nimport \"@shoelace-style/shoelace/dist/components/card/card.js\";\nimport \"./edit-profile.js\";\n\nimport { ProfilesStore } from \"../profiles-store.js\";\nimport { profilesStoreContext } from \"../context.js\";\nimport { Profile } from \"../types.js\";\n\n/**\n * A custom element that fires event on value change.\n *\n * @element create-profile\n * @fires profile-created - Fired after the profile has been created. Detail will have this shape: { profile: { nickname, fields } }\n */\n@localized()\n@customElement(\"create-profile\")\nexport class CreateProfile extends LitElement {\n  /**\n   * Profiles store for this element, not required if you embed this element inside a <profiles-context>\n   */\n  @consume({ context: profilesStoreContext, subscribe: true })\n  @property()\n  store!: ProfilesStore;\n\n  /** Private properties */\n\n  async createProfile(profile: Profile) {\n    try {\n      await this.store.client.createProfile(profile);\n\n      this.dispatchEvent(\n        new CustomEvent(\"profile-created\", {\n          detail: {\n            profile,\n          },\n          bubbles: true,\n          composed: true,\n        })\n      );\n    } catch (e) {\n      console.error(e);\n      notifyError(msg(\"Error creating the profile\"));\n    }\n  }\n\n  render() {\n    return html`\n      <sl-card>\n        <div class=\"column\">\n          <span\n            class=\"title\"\n            style=\"margin-bottom: 16px; align-self: flex-start\"\n            >${msg(\"Create Profile\")}</span\n          >\n          <edit-profile\n            .saveProfileLabel=${msg(\"Create Profile\")}\n            .store=${this.store}\n            @save-profile=${(e: CustomEvent) =>\n              this.createProfile(e.detail.profile)}\n          ></edit-profile></div\n      ></sl-card>\n    `;\n  }\n\n  static styles = [sharedStyles];\n}\n","import { html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { localized, msg, str } from '@lit/localize';\nimport { consume } from '@lit-labs/context';\nimport { onSubmit, sharedStyles } from '@holochain-open-dev/elements';\n\nimport '@shoelace-style/shoelace/dist/components/avatar/avatar.js';\nimport '@shoelace-style/shoelace/dist/components/button/button.js';\nimport '@shoelace-style/shoelace/dist/components/input/input.js';\nimport '@shoelace-style/shoelace/dist/components/icon/icon.js';\nimport '@holochain-open-dev/elements/elements/select-avatar.js';\n\nimport { ProfilesStore } from '../profiles-store.js';\nimport { profilesStoreContext } from '../context.js';\nimport { Profile } from '../types.js';\nimport { FieldConfig } from '../config.js';\n\n/**\n * @element edit-profile\n * @fires save-profile - Fired when the save profile button is clicked\n */\n@localized()\n@customElement('edit-profile')\nexport class EditProfile extends LitElement {\n  /**\n   * The profile to be edited.\n   */\n  @property({ type: Object })\n  profile: Profile | undefined;\n\n  /**\n   * Label for the save profile button.\n   */\n  @property({ type: String, attribute: 'save-profile-label' })\n  saveProfileLabel: string | undefined;\n\n  /**\n   * Profiles store for this element, not required if you embed this element inside a <profiles-context>\n   */\n  @consume({ context: profilesStoreContext, subscribe: true })\n  @property()\n  store!: ProfilesStore;\n\n  @property({ type: Boolean, attribute: 'allow-cancel' })\n  allowCancel = false;\n\n  /** Private properties */\n\n  avatarMode() {\n    return (\n      this.store.config.avatarMode === 'avatar-required' ||\n      this.store.config.avatarMode === 'avatar-optional'\n    );\n  }\n\n  fireSaveProfile(fields: Record<string, string>) {\n    const nickname = fields['nickname'];\n    delete fields['nickname'];\n\n    const profile: Profile = {\n      fields,\n      nickname,\n    };\n\n    this.dispatchEvent(\n      new CustomEvent('save-profile', {\n        detail: {\n          profile,\n        },\n        bubbles: true,\n        composed: true,\n      })\n    );\n  }\n\n  fireCancel() {\n    this.dispatchEvent(\n      new CustomEvent('cancel-edit-profile', {\n        bubbles: true,\n        composed: true,\n      })\n    );\n  }\n\n  renderField(fieldConfig: FieldConfig) {\n    return html`\n      <sl-input\n        name=\"${fieldConfig.name}\"\n        .required=${fieldConfig.required}\n        .label=${fieldConfig.label}\n        .value=${this.profile?.fields[fieldConfig.name] || ''}\n        style=\"margin-bottom: 16px;\"\n      ></sl-input>\n    `;\n  }\n\n  render() {\n    return html`\n      <form\n        id=\"profile-form\"\n        class=\"column\"\n        ${onSubmit(fields => this.fireSaveProfile(fields))}\n      >\n        <div\n          class=\"row\"\n          style=\"justify-content: center; align-self: start; margin-bottom: 16px\"\n        >\n          ${this.avatarMode()\n            ? html` <select-avatar\n                name=\"avatar\"\n                .value=${this.profile?.fields['avatar'] || undefined}\n                .required=${this.store.config.avatarMode === 'avatar-required'}\n              ></select-avatar>`\n            : html``}\n\n          <sl-input\n            name=\"nickname\"\n            .label=${msg('Nickname')}\n            required\n            minLength=\"${this.store.config.minNicknameLength}\"\n            .value=${this.profile?.nickname || ''}\n            .helpText=${msg(\n              str`Min. ${this.store.config.minNicknameLength} characters`\n            )}\n            style=\"margin-left: 16px;\"\n          ></sl-input>\n        </div>\n\n        ${this.store.config.additionalFields.map(field =>\n          this.renderField(field)\n        )}\n\n        <div class=\"row\" style=\"margin-top: 8px;\">\n          ${this.allowCancel\n            ? html`\n                <sl-button\n                  style=\"flex: 1; margin-right: 6px;\"\n                  @click=${() => this.fireCancel()}\n                >\n                  ${msg('Cancel')}\n                </sl-button>\n              `\n            : html``}\n\n          <sl-button style=\"flex: 1;\" variant=\"primary\" type=\"submit\"\n            >${this.saveProfileLabel ?? msg('Save Profile')}\n          </sl-button>\n        </div>\n      </form>\n    `;\n  }\n\n  static styles = [sharedStyles];\n}\n","import { html } from \"lit-html\";\nimport \"@holochain-open-dev/profiles/elements/create-profile.js\";\nimport \"@holochain-open-dev/profiles/elements/profiles-context.js\";\nimport { ProfilesZomeMock } from \"@holochain-open-dev/profiles/mocks\";\nimport { ProfilesStore, ProfilesClient } from \"@holochain-open-dev/profiles\";\n\n// More on how to set up stories at: https://storybook.js.org/docs/7.0/web-components/writing-stories/introduction\nexport default {\n  title: \"Frontend/Elements/create-profile\",\n  tags: [\"autodocs\"],\n  component: \"create-profile\",\n  render: (args) =>\n    html` <profiles-context\n      .store=${new ProfilesStore(new ProfilesClient(new ProfilesZomeMock()))}\n    >\n      <create-profile />\n    </profiles-context>`,\n};\n\n// More on writing stories with args: https://storybook.js.org/docs/7.0/web-components/writing-stories/args\nexport const Demo = {};\n"],"names":[],"sourceRoot":""}