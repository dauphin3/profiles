{"version":3,"file":"list-profiles.js","sourceRoot":"","sources":["../../src/elements/list-profiles.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE7C,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AACnD,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EACL,gBAAgB,EAChB,QAAQ,EACR,IAAI,GACL,MAAM,+BAA+B,CAAC;AAEvC,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;AAErD,OAAO,EAAE,oBAAoB,EAAE,MAAM,YAAY,CAAC;AAClD,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAI7C;;;GAGG;AACH,MAAM,OAAO,YAAa,SAAQ,mBAAmB,CAAC,UAAU,CAAC;IAAjE;QACE,mBAAmB;;QAUnB,yBAAyB;QAEjB,qBAAgB,GAAG,IAAI,cAAc,CAC3C,IAAI,EACJ,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,EACnC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CACnB,CAAC;IAkFJ,CAAC;IAhFC,QAAQ,CAAC,QAAgB;QACvB,OAAO,QAAQ;aACZ,KAAK,CAAC,GAAG,CAAC;aACV,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACpB,IAAI,CAAC,EAAE,CAAC,CAAC;IACd,CAAC;IAED,iBAAiB,CAAC,KAAa;;QAC7B,MAAM,WAAW,GAAG,MAAA,IAAI,CAAC,gBAAgB,CAAC,KAAK,0CAAE,IAAI,GAAG,KAAK,CAAC,CAAC;QAE/D,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,gBAAgB,EAAE;gBAChC,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE;oBACN,WAAW;iBACZ;aACF,CAAC,CACH,CAAC;SACH;IACH,CAAC;IAED,UAAU,CAAC,QAA8B;QACvC,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC;YAC9B,OAAO,IAAI,CAAA;;QAET,CAAC;QAEL,OAAO,IAAI,CAAA;;;oBAGK,CAAC,CAAc,EAAE,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;;UAEpE,QAAQ,CAAC,OAAO,EAAE,CAAC,GAAG,CACtB,CAAC,CAAC,aAAa,EAAE,OAAO,CAAC,EAAE,EAAE,CAAC,IAAI,CAAA;;;uBAGrB,aAAa,CAAC,QAAQ,EAAE;;;0DAGW,aAAa;;sBAEjD,OAAO,CAAC,QAAQ;;WAE3B,CACF;;KAEJ,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;YAClC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAA;;aAEZ;YACP,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;SAChD,CAAC,CAAC;IACL,CAAC;IAWD;;OAEG;IACH,MAAM,KAAK,cAAc;QACvB,OAAO;YACL,cAAc,EAAE,WAAW;YAC3B,uBAAuB,EAAE,gBAAgB;YACzC,UAAU,EAAE,IAAI;YAChB,eAAe,EAAE,QAAQ;SAC1B,CAAC;IACJ,CAAC;;AAnBM,mBAAM,GAAG;IACd,YAAY;IACZ,GAAG,CAAA;;;;KAIF;CACF,CAAC;AA7EF;IAFC,eAAe,CAAC,EAAE,OAAO,EAAE,oBAAoB,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;IACnE,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;2CACL","sourcesContent":["import { css, html, LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\n\nimport { TaskSubscriber } from 'lit-svelte-stores';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { contextProvided } from '@lit-labs/context';\nimport {\n  CircularProgress,\n  ListItem,\n  List,\n} from '@scoped-elements/material-web';\n\nimport { sharedStyles } from './utils/shared-styles';\nimport { ProfilesStore } from '../profiles-store';\nimport { profilesStoreContext } from '../context';\nimport { AgentAvatar } from './agent-avatar';\nimport { Profile } from '../types';\nimport { HoloHashMap } from '@holochain-open-dev/utils';\n\n/**\n * @element list-profiles\n * @fires agent-selected - Fired when the user selects an agent from the list. Detail will have this shape: { agentPubKey: 'uhCAkSEspAJks5Q8863Jg1RJhuJHJpFWzwDJkxVjVSk9JueU' }\n */\nexport class ListProfiles extends ScopedElementsMixin(LitElement) {\n  /** Dependencies */\n\n  /**\n   * `ProfilesStore` that is requested via context.\n   * Only set this property if you want to override the store requested via context.\n   */\n  @contextProvided({ context: profilesStoreContext, subscribe: true })\n  @property({ type: Object })\n  store!: ProfilesStore;\n\n  /** Private properties */\n\n  private _allProfilesTask = new TaskSubscriber(\n    this,\n    () => this.store.fetchAllProfiles(),\n    () => [this.store]\n  );\n\n  initials(nickname: string): string {\n    return nickname\n      .split(' ')\n      .map(name => name[0])\n      .join('');\n  }\n\n  fireAgentSelected(index: number) {\n    const agentPubKey = this._allProfilesTask.value?.keys()[index];\n\n    if (agentPubKey) {\n      this.dispatchEvent(\n        new CustomEvent('agent-selected', {\n          bubbles: true,\n          composed: true,\n          detail: {\n            agentPubKey,\n          },\n        })\n      );\n    }\n  }\n\n  renderList(profiles: HoloHashMap<Profile>) {\n    if (profiles.keys().length === 0)\n      return html`<mwc-list-item\n        >There are no created profiles yet</mwc-list-item\n      >`;\n\n    return html`\n      <mwc-list\n        style=\"min-width: 80px; flex: 1;\"\n        @selected=${(e: CustomEvent) => this.fireAgentSelected(e.detail.index)}\n      >\n        ${profiles.entries().map(\n          ([agent_pub_key, profile]) => html`\n            <mwc-list-item\n              graphic=\"avatar\"\n              .value=${agent_pub_key.toString()}\n              style=\"--mdc-list-item-graphic-size: 32px;\"\n            >\n              <agent-avatar slot=\"graphic\" .agentPubKey=${agent_pub_key}>\n              </agent-avatar>\n              <span>${profile.nickname}</span>\n            </mwc-list-item>\n          `\n        )}\n      </mwc-list>\n    `;\n  }\n\n  render() {\n    return this._allProfilesTask.render({\n      pending: () => html`<div class=\"fill center-content\">\n        <mwc-circular-progress indeterminate></mwc-circular-progress>\n      </div>`,\n      complete: profiles => this.renderList(profiles),\n    });\n  }\n\n  static styles = [\n    sharedStyles,\n    css`\n      :host {\n        display: flex;\n      }\n    `,\n  ];\n\n  /**\n   * @ignore\n   */\n  static get scopedElements() {\n    return {\n      'agent-avatar': AgentAvatar,\n      'mwc-circular-progress': CircularProgress,\n      'mwc-list': List,\n      'mwc-list-item': ListItem,\n    };\n  }\n}\n"]}