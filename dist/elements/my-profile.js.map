{"version":3,"file":"my-profile.js","sourceRoot":"","sources":["../../src/elements/my-profile.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAEpD,OAAO,EAAE,oBAAoB,EAAE,MAAM,YAAY,CAAC;AAElD,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;AACrD,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;AAC3D,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AAEjD;;GAEG;AACH,MAAM,OAAO,SAAU,SAAQ,mBAAmB,CAAC,UAAU,CAAC;IAA9D;QACE,mBAAmB;;QAUnB,yBAAyB;QAGjB,aAAQ,GAAG,KAAK,CAAC;IA+B3B,CAAC;IA7BC,MAAM;QACJ,IAAI,IAAI,CAAC,QAAQ;YACf,OAAO,IAAI,CAAA;2BACU,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;yBAC/B,CAAC;QAEtB,OAAO,IAAI,CAAA;qCACsB,IAAI,CAAC,KAAK,CAAC,aAAa;;;;mBAI1C,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;;;KAG1C,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,MAAM,KAAK,cAAc;QACvB,OAAO;YACL,iBAAiB,EAAE,UAAU;YAC7B,gBAAgB,EAAE,aAAa;YAC/B,gBAAgB,EAAE,aAAa;SAChC,CAAC;IACJ,CAAC;;AAEM,gBAAM,GAAG,CAAC,YAAY,CAAC,CAAC;AAnC/B;IAFC,eAAe,CAAC,EAAE,OAAO,EAAE,oBAAoB,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;IACnE,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;wCACL;AAKtB;IADC,KAAK,EAAE;2CACiB","sourcesContent":["import { contextProvided } from '@lit-labs/context';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { html, LitElement } from 'lit';\nimport { property, state } from 'lit/decorators.js';\n\nimport { profilesStoreContext } from '../context';\nimport { ProfilesStore } from '../profiles-store';\nimport { sharedStyles } from './utils/shared-styles';\nimport { ProfileDetail } from './profile-detail';\nimport { IconButton } from '@scoped-elements/material-web';\nimport { UpdateProfile } from './update-profile';\n\n/**\n * @element profile-detail\n */\nexport class MyProfile extends ScopedElementsMixin(LitElement) {\n  /** Dependencies */\n\n  /**\n   * `ProfilesStore` that is requested via context.\n   * Only set this property if you want to override the store requested via context.\n   */\n  @contextProvided({ context: profilesStoreContext, subscribe: true })\n  @property({ type: Object })\n  store!: ProfilesStore;\n\n  /** Private properties */\n\n  @state()\n  private _editing = false;\n\n  render() {\n    if (this._editing)\n      return html`<update-profile\n        @profile-updated=${() => (this._editing = false)}\n      ></update-profile>`;\n\n    return html`\n      <profile-detail .agentPubKey=${this.store.myAgentPubKey}>\n        <mwc-icon-button\n          slot=\"action\"\n          icon=\"edit\"\n          @click=${() => (this._editing = true)}\n        ></mwc-icon-button>\n      </profile-detail>\n    `;\n  }\n\n  /**\n   * @ignore\n   */\n  static get scopedElements() {\n    return {\n      'mwc-icon-button': IconButton,\n      'profile-detail': ProfileDetail,\n      'update-profile': UpdateProfile,\n    };\n  }\n\n  static styles = [sharedStyles];\n}\n"]}