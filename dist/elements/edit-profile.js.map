{"version":3,"file":"edit-profile.js","sourceRoot":"","sources":["../../src/elements/edit-profile.ts"],"names":[],"mappings":"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","sourcesContent":["import { contextProvided } from '@lit-labs/context';\nimport { Dictionary } from '@holochain-open-dev/core-types';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport {\n  Button,\n  Fab,\n  IconButton,\n  TextField,\n} from '@scoped-elements/material-web';\nimport { SlAvatar } from '@scoped-elements/shoelace';\nimport { html, LitElement } from 'lit';\nimport { property, query, state } from 'lit/decorators.js';\nimport { localized, msg, str } from '@lit/localize';\n\nimport { ProfilesStore } from '../profiles-store';\nimport { profilesStoreContext } from '../context';\nimport { Profile } from '../types';\nimport { resizeAndExport } from './utils/image';\nimport { sharedStyles } from './utils/shared-styles';\n\n/**\n * @element edit-profile\n * @fires save-profile - Fired when the save profile button is clicked\n */\n@localized()\nexport class EditProfile extends ScopedElementsMixin(LitElement) {\n  /**\n   * The profile to be edited.\n   */\n  @property({ type: Object })\n  profile: Profile | undefined;\n\n  /**\n   * Label for the save profile button.\n   */\n  @property({ type: String, attribute: 'save-profile-label' })\n  saveProfileLabel: string | undefined;\n\n  /** Dependencies */\n\n  /**\n   * `ProfilesStore` that is requested via context.\n   * Only set this property if you want to override the store requested via context.\n   */\n  @contextProvided({ context: profilesStoreContext, subscribe: true })\n  @property({ type: Object })\n  store!: ProfilesStore;\n\n  /** Private properties */\n\n  @query('#nickname-field')\n  private _nicknameField!: TextField;\n\n  private _existingUsernames: { [key: string]: boolean } = {};\n\n  @query('#avatar-file-picker')\n  private _avatarFilePicker!: HTMLInputElement;\n\n  @state()\n  private _avatar: string | undefined;\n\n  firstUpdated() {\n    this._avatar = this.profile?.fields['avatar'];\n\n    this._nicknameField.validityTransform = (newValue: string) => {\n      this.requestUpdate();\n      if (newValue.length < this.store.config.minNicknameLength) {\n        this._nicknameField.setCustomValidity(msg(`Nickname is too short`));\n        return {\n          valid: false,\n        };\n      } else if (this._existingUsernames[newValue]) {\n        this._nicknameField.setCustomValidity(\n          msg('This nickname already exists')\n        );\n        return { valid: false };\n      }\n\n      return {\n        valid: true,\n      };\n    };\n  }\n\n  onAvatarUploaded() {\n    if (this._avatarFilePicker.files && this._avatarFilePicker.files[0]) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const img = new Image();\n        img.crossOrigin = 'anonymous';\n        img.onload = () => {\n          this._avatar = resizeAndExport(img);\n          this._avatarFilePicker.value = '';\n        };\n        img.src = e.target?.result as string;\n      };\n      reader.readAsDataURL(this._avatarFilePicker.files[0]);\n    }\n  }\n\n  avatarMode() {\n    return (\n      this.store.config.avatarMode === 'avatar-required' ||\n      this.store.config.avatarMode === 'avatar-optional'\n    );\n  }\n\n  renderAvatar() {\n    if (!this.avatarMode()) return html``;\n    return html`\n      <div\n        style=\"width: 80px; height: 80px; justify-content: center;\"\n        class=\"row\"\n      >\n        ${this._avatar\n          ? html`\n              <div class=\"column\" style=\"align-items: center; \">\n                <sl-avatar\n                  image=\"${this._avatar}\"\n                  alt=\"Avatar\"\n                  style=\"margin-bottom: 4px; --size: 3.5rem;\"\n                  initials=\"\"\n                ></sl-avatar>\n                <span\n                  class=\"placeholder label\"\n                  style=\"cursor: pointer;   text-decoration: underline;\"\n                  @click=${() => (this._avatar = undefined)}\n                  >${msg('Clear')}</span\n                >\n              </div>\n            `\n          : html` <div class=\"column\" style=\"align-items: center;\">\n              <mwc-fab\n                icon=\"add\"\n                @click=${() => this._avatarFilePicker.click()}\n                style=\"margin-bottom: 4px;\"\n              ></mwc-fab>\n              <span class=\"placeholder label\">Avatar</span>\n            </div>`}\n      </div>\n    `;\n  }\n\n  shouldSaveButtonBeEnabled() {\n    if (!this._nicknameField) return false;\n    if (!this._nicknameField.validity.valid) return false;\n    if (this.store.config.avatarMode === 'avatar-required' && !this._avatar)\n      return false;\n    if (\n      Object.values(this.getAdditionalTextFields()).find(t => !t.validity.valid)\n    )\n      return false;\n\n    return true;\n  }\n\n  textfieldToFieldId(field: TextField): string {\n    return field.id.split('-')[2];\n  }\n\n  getAdditionalFieldsValues(): Dictionary<string> {\n    const textfields = this.getAdditionalTextFields();\n\n    const values: Dictionary<string> = {};\n    for (const [id, textfield] of Object.entries(textfields)) {\n      values[id] = textfield.value;\n    }\n\n    return values;\n  }\n\n  getAdditionalTextFields(): Dictionary<TextField> {\n    const textfields = Array.from(\n      this.shadowRoot!.querySelectorAll('mwc-textfield')\n    ).filter(f => f.id !== 'nickname-field') as TextField[];\n\n    const fields: Dictionary<TextField> = {};\n    for (const field of textfields) {\n      const id = this.textfieldToFieldId(field);\n      fields[id] = field;\n    }\n    return fields;\n  }\n\n  fireSaveProfile() {\n    const nickname = this._nicknameField.value;\n\n    const fields: Dictionary<string> = this.getAdditionalFieldsValues();\n    if (this._avatar) {\n      fields['avatar'] = this._avatar;\n    }\n\n    const profile: Profile = {\n      fields,\n      nickname,\n    };\n\n    this.dispatchEvent(\n      new CustomEvent('save-profile', {\n        detail: {\n          profile,\n        },\n        bubbles: true,\n        composed: true,\n      })\n    );\n  }\n\n  renderField(fieldName: string) {\n    return html`\n      <mwc-textfield\n        id=\"profile-field-${fieldName}\"\n        outlined\n        required\n        autoValidate\n        .validationMessage=${msg('This field is required')}\n        .label=${fieldName}\n        .value=${this.profile?.fields[fieldName] || ''}\n        @input=${() => this.requestUpdate()}\n        style=\"margin-top: 8px;\"\n      ></mwc-textfield>\n    `;\n  }\n\n  render() {\n    return html`\n      ${\n        this.avatarMode()\n          ? html`<input\n              type=\"file\"\n              id=\"avatar-file-picker\"\n              style=\"display: none;\"\n              @change=${this.onAvatarUploaded}\n            />`\n          : html``\n      }\n        <div class=\"column\">\n\n          <div class=\"row\" style=\"justify-content: center; margin-bottom: 8px; align-self: start;\" >\n            ${this.renderAvatar()}\n\n            <mwc-textfield\n              id=\"nickname-field\"\n              outlined\n              .label=${msg('Nickname')}\n              .value=${this.profile?.nickname || ''}\n              .helper=${msg(\n                str`Min. ${this.store.config.minNicknameLength} characters`\n              )}\n              @input=${() => this._nicknameField.reportValidity()}\n              style=\"margin-left: 8px;\"\n            ></mwc-textfield>\n          </div>\n\n          ${this.store.config.additionalFields.map(field =>\n            this.renderField(field)\n          )}\n\n          <mwc-button\n            raised\n            style=\"margin-top: 8px;\"\n            .disabled=${!this.shouldSaveButtonBeEnabled()}\n            .label=${this.saveProfileLabel ?? msg('Save Profile')}\n            @click=${() => this.fireSaveProfile()}\n          ></mwc-button>\n        </div>\n      </mwc-card>\n    `;\n  }\n\n  /**\n   * @ignore\n   */\n  static get scopedElements() {\n    return {\n      'mwc-textfield': TextField,\n      'mwc-button': Button,\n      'mwc-fab': Fab,\n      'mwc-icon-button': IconButton,\n      'sl-avatar': SlAvatar,\n    };\n  }\n\n  static styles = [sharedStyles];\n}\n"]}