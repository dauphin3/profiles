{"version":3,"file":"update-profile.js","sourceRoot":"","sources":["../../src/elements/update-profile.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,IAAI,EAAE,gBAAgB,EAAE,MAAM,+BAA+B,CAAC;AACvE,OAAO,EAAE,GAAG,EAAE,MAAM,eAAe,CAAC;AACpC,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAEnD,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;AAErD,OAAO,EAAE,oBAAoB,EAAE,MAAM,YAAY,CAAC;AAClD,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAG7C;;;GAGG;AACH,MAAM,OAAO,aAAc,SAAQ,mBAAmB,CAAC,UAAU,CAAC;IAAlE;QACE,mBAAmB;;QAUnB,yBAAyB;QAEjB,mBAAc,GAAG,IAAI,cAAc,CACzC,IAAI,EACJ,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EACjC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CACnB,CAAC;IA8CJ,CAAC;IA5CC,KAAK,CAAC,aAAa,CAAC,OAAgB;QAClC,MAAM,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAExC,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,iBAAiB,EAAE;YACjC,MAAM,EAAE;gBACN,OAAO;aACR;YACD,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;SACf,CAAC,CACH,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;YAChC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAA;;;;;aAKZ;YACP,QAAQ,EAAE,OAAO,CAAC,EAAE,CAAC,IAAI,CAAA;mBACZ,OAAO;8BACI,GAAG,CAAC,gBAAgB,CAAC;wBAC3B,CAAC,CAAc,EAAE,EAAE,CACjC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;uBACvB;SAClB,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,MAAM,KAAK,cAAc;QACvB,OAAO;YACL,uBAAuB,EAAE,gBAAgB;YACzC,cAAc,EAAE,WAAW;YAC3B,UAAU,EAAE,IAAI;SACjB,CAAC;IACJ,CAAC;IACD,MAAM,KAAK,MAAM;QACf,OAAO,CAAC,YAAY,CAAC,CAAC;IACxB,CAAC;CACF;AAtDC;IAFC,eAAe,CAAC,EAAE,OAAO,EAAE,oBAAoB,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;IACnE,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;4CACL","sourcesContent":["import { html, LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { contextProvided } from '@lit-labs/context';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { Card, CircularProgress } from '@scoped-elements/material-web';\nimport { msg } from '@lit/localize';\nimport { TaskSubscriber } from 'lit-svelte-stores';\n\nimport { sharedStyles } from './utils/shared-styles';\nimport { ProfilesStore } from '../profiles-store';\nimport { profilesStoreContext } from '../context';\nimport { EditProfile } from './edit-profile';\nimport { Profile } from '../types';\n\n/**\n * @element update-profile\n * @fires profile-updated - Fired after the profile has been created. Detail will have this shape: { profile: { nickname, fields } }\n */\nexport class UpdateProfile extends ScopedElementsMixin(LitElement) {\n  /** Dependencies */\n\n  /**\n   * `ProfilesStore` that is requested via context.\n   * Only set this property if you want to override the store requested via context.\n   */\n  @contextProvided({ context: profilesStoreContext, subscribe: true })\n  @property({ type: Object })\n  store!: ProfilesStore;\n\n  /** Private properties */\n\n  private _myProfileTask = new TaskSubscriber(\n    this,\n    () => this.store.fetchMyProfile(),\n    () => [this.store]\n  );\n\n  async updateProfile(profile: Profile) {\n    await this.store.updateProfile(profile);\n\n    this.dispatchEvent(\n      new CustomEvent('profile-updated', {\n        detail: {\n          profile,\n        },\n        bubbles: true,\n        composed: true,\n      })\n    );\n  }\n\n  render() {\n    return this._myProfileTask.render({\n      pending: () => html`<div\n        class=\"column\"\n        style=\"align-items: center; justify-content: center; flex: 1;\"\n      >\n        <mwc-circular-progress indeterminate></mwc-circular-progress>\n      </div>`,\n      complete: profile => html` <edit-profile\n        .profile=${profile}\n        .save-profile-label=${msg('Update Profile')}\n        @save-profile=${(e: CustomEvent) =>\n          this.updateProfile(e.detail.profile)}\n      ></edit-profile>`,\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  static get scopedElements() {\n    return {\n      'mwc-circular-progress': CircularProgress,\n      'edit-profile': EditProfile,\n      'mwc-card': Card,\n    };\n  }\n  static get styles() {\n    return [sharedStyles];\n  }\n}\n"]}