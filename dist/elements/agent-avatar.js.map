{"version":3,"file":"agent-avatar.js","sourceRoot":"","sources":["../../src/elements/agent-avatar.ts"],"names":[],"mappings":"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","sourcesContent":["import { contextProvided } from '@lit-labs/context';\nimport { HoloIdenticon } from '@holochain-open-dev/utils';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { css, html, LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { styleMap } from 'lit-html/directives/style-map.js';\nimport { SlAvatar, SlSkeleton } from '@scoped-elements/shoelace';\nimport { TaskSubscriber } from 'lit-svelte-stores';\nimport { AgentPubKey } from '@holochain/client';\n\nimport { profilesStoreContext } from '../context';\nimport { ProfilesStore } from '../profiles-store';\nimport { sharedStyles } from './utils/shared-styles';\nimport { Profile } from '../types';\n\nexport class AgentAvatar extends ScopedElementsMixin(LitElement) {\n  /** Public properties */\n\n  /**\n   * REQUIRED. The public key identifying the agent whose profile is going to be shown.\n   */\n  @property({\n    type: Object,\n  })\n  agentPubKey!: AgentPubKey;\n\n  /**\n   * Size of the avatar image in pixels.\n   */\n  @property({ type: Number })\n  size = 32;\n\n  /** Dependencies */\n\n  /**\n   * `ProfilesStore` that is requested via context.\n   * Only set this property if you want to override the store requested via context.\n   */\n  @contextProvided({ context: profilesStoreContext, subscribe: true })\n  @property({ type: Object })\n  store!: ProfilesStore;\n\n  _profileTask = new TaskSubscriber(\n    this,\n    () => this.store.fetchAgentProfile(this.agentPubKey),\n    () => [this.store, this.agentPubKey]\n  );\n\n  renderIdenticon() {\n    return html` <div\n      style=${styleMap({\n        position: 'relative',\n        height: `${this.size}px`,\n        width: `${this.size}px`,\n      })}\n    >\n      <holo-identicon .hash=${this.agentPubKey} .size=${this.size}>\n      </holo-identicon>\n      <div class=\"badge\"><slot name=\"badge\"></slot></div>\n    </div>`;\n  }\n\n  renderProfile(profile: Profile | undefined) {\n    if (!profile || !profile.fields.avatar) return this.renderIdenticon();\n\n    return html`\n      <div\n        style=${styleMap({\n          position: 'relative',\n          height: `${this.size}px`,\n          width: `${this.size}px`,\n        })}\n      >\n        <sl-avatar\n          .image=${profile.fields.avatar}\n          style=\"--size: ${this.size}px;\"\n        >\n        </sl-avatar>\n        <div class=\"badge\"><slot name=\"badge\"></slot></div>\n      </div>\n    `;\n  }\n\n  render() {\n    if (this.store.config.avatarMode === 'identicon')\n      return this.renderIdenticon();\n\n    return this._profileTask.render({\n      complete: profile => this.renderProfile(profile),\n      pending: () => html`<sl-skeleton\n        effect=\"pulse\"\n        style=\"height: ${this.size}px; width: ${this.size}px\"\n      ></sl-skeleton>`,\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  static get scopedElements() {\n    return {\n      'holo-identicon': HoloIdenticon,\n      'sl-avatar': SlAvatar,\n      'sl-skeleton': SlSkeleton,\n    };\n  }\n\n  static styles = [\n    sharedStyles,\n    css`\n      .badge {\n        position: absolute;\n        right: 0;\n        bottom: 0;\n      }\n    `,\n  ];\n}\n"]}