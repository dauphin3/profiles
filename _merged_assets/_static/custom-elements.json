{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "locales/es-419.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "templates",
          "type": {
            "text": "object"
          },
          "default": "{\n      's13f20cb257e12fac': `Campo obligatorio`,\n's3798c0344c399eb7': str`Min. ${0} caracteres`,\n's39aca5bd9eed9271': `Este agente no ha creado su perfil todavía`,\n's3fa309bef44c54e9': `Al menos 3 caracteres...`,\n's6068cc1885ea6494': `No se ha encontrado ningún agente`,\n's639c68c3284a2269': `Actualizar Perfil`,\n's7892d152096ebca9': `El nombre de usuario ya existe`,\n'sb4f1dffbb6be6302': `Borrar`,\n'sbe57083b4c785878': `Crear Perfil`,\n'sc93a9aa3e5bcbf5d': `Guardar Perfil`,\n'se9f30e4492cee2cd': `Nombre de usuario`,\n'sf58564266e0fc01f': `Nombre demasiado corto`,\n'sfbf76da07548a998': `Buscar agente`,\n    }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "templates",
            "module": "locales/es-419.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/config.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "defaultConfig",
          "type": {
            "text": "ProfilesConfig"
          },
          "default": "{\n  avatarMode: 'avatar-optional',\n  additionalFields: [],\n  minNicknameLength: 3,\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "defaultConfig",
          "declaration": {
            "name": "defaultConfig",
            "module": "src/config.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "profilesStoreContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "profilesStoreContext",
          "declaration": {
            "name": "profilesStoreContext",
            "module": "src/context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./types"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./context"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./elements/create-profile"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./elements/update-profile"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./elements/my-profile"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./elements/search-agent"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./elements/profiles-context"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./elements/profile-prompt"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./elements/list-profiles"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./elements/agent-avatar"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./elements/profile-detail"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./profiles-service"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./profiles-store"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./config"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/mocks.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ProfilesZomeMock",
          "members": [
            {
              "kind": "field",
              "name": "myPubKeyB64"
            },
            {
              "kind": "method",
              "name": "create_profile",
              "parameters": [
                {
                  "name": "{ nickname }",
                  "type": {
                    "text": "{ nickname: string }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "search_profiles",
              "parameters": [
                {
                  "name": "{ nicknamePrefix }",
                  "type": {
                    "text": "{ nicknamePrefix: string }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_my_profile"
            },
            {
              "kind": "method",
              "name": "get_agent_profile",
              "parameters": [
                {
                  "name": "agent_address",
                  "type": {
                    "text": "AgentPubKeyB64"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_all_profiles"
            },
            {
              "kind": "method",
              "name": "findAgent",
              "parameters": [
                {
                  "name": "agent_address",
                  "type": {
                    "text": "AgentPubKeyB64"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "callZome",
              "return": {
                "type": {
                  "text": "Promise<any>"
                }
              },
              "parameters": [
                {
                  "name": "zomeName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "fnName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "payload",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "timeout",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "addSignalHandler",
              "return": {
                "type": {
                  "text": "{ unsubscribe: () => void }"
                }
              },
              "parameters": [
                {
                  "name": "signalHandler",
                  "type": {
                    "text": "AppSignalCb"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "CellClient",
            "package": "@holochain-open-dev/cell-client"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProfilesZomeMock",
          "declaration": {
            "name": "ProfilesZomeMock",
            "module": "src/mocks.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiles-service.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ProfilesService",
          "members": [
            {
              "kind": "method",
              "name": "getMyProfile",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Get my profile, if it has been created"
            },
            {
              "kind": "method",
              "name": "getAgentProfile",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "agentPubKey",
                  "type": {
                    "text": "AgentPubKeyB64"
                  },
                  "description": "the agent to get the profile for"
                }
              ],
              "description": "Get the profile for the given agent, if they have created it"
            },
            {
              "kind": "method",
              "name": "getAgentsProfiles",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "agentPubKeys",
                  "type": {
                    "text": "AgentPubKeyB64[]"
                  },
                  "description": "the agents to get the profile for"
                }
              ],
              "description": "Get the profiles for the given agent"
            },
            {
              "kind": "method",
              "name": "searchProfiles",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "nicknamePrefix",
                  "type": {
                    "text": "string"
                  },
                  "description": "must be of at least 3 characters"
                }
              ],
              "description": "Search profiles that start with nicknamePrefix"
            },
            {
              "kind": "method",
              "name": "getAllProfiles",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Get the profiles for all the agents in the DHT"
            },
            {
              "kind": "method",
              "name": "createProfile",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile"
                  },
                  "description": "the profile to create"
                }
              ],
              "description": "Create my profile"
            },
            {
              "kind": "method",
              "name": "updateProfile",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile"
                  },
                  "description": "the profile to create"
                }
              ],
              "description": "Update my profile"
            },
            {
              "kind": "method",
              "name": "callZome",
              "privacy": "private",
              "parameters": [
                {
                  "name": "fn_name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "payload",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProfilesService",
          "declaration": {
            "name": "ProfilesService",
            "module": "src/profiles-service.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiles-store.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ProfilesStore",
          "members": [
            {
              "kind": "field",
              "name": "_knownProfilesStore",
              "type": {
                "text": "Writable<Record<string, Profile>>"
              },
              "privacy": "private",
              "description": "Private"
            },
            {
              "kind": "field",
              "name": "myAgentPubKey",
              "type": {
                "text": "AgentPubKeyB64"
              },
              "privacy": "public",
              "description": "Static info"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "ProfilesConfig"
              }
            },
            {
              "kind": "method",
              "name": "fetchAllProfiles",
              "return": {
                "type": {
                  "text": "Promise<Readable<Record<string, Profile>>>"
                }
              },
              "description": "Fetches the profiles for all agents in the DHT\n\nWarning! Can be very slow"
            },
            {
              "kind": "method",
              "name": "fetchAgentProfile",
              "return": {
                "type": {
                  "text": "Promise<Readable<Profile | undefined>>"
                }
              },
              "parameters": [
                {
                  "name": "agentPubKey",
                  "type": {
                    "text": "AgentPubKeyB64"
                  }
                }
              ],
              "description": "Fetches the profile for the given agent"
            },
            {
              "kind": "method",
              "name": "fetchAgentsProfiles",
              "return": {
                "type": {
                  "text": "Promise<Readable<Record<string, Profile>>>"
                }
              },
              "parameters": [
                {
                  "name": "agentPubKeys",
                  "type": {
                    "text": "AgentPubKeyB64[]"
                  }
                }
              ],
              "description": "Fetches the profiles for the given agents in the DHT\n\nYou can subscribe to knowProfiles to get updated with all the profiles when this call is done\n\nUse this over `fetchAgentProfile` when fetching multiple profiles, as it will be more performant"
            },
            {
              "kind": "method",
              "name": "fetchMyProfile",
              "return": {
                "type": {
                  "text": "Promise<Readable<Profile | undefined>>"
                }
              },
              "description": "Fetch my profile\n\nYou can subscribe to `myProfile` to get updated with my profile"
            },
            {
              "kind": "method",
              "name": "searchProfiles",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "nicknamePrefix",
                  "type": {
                    "text": "string"
                  },
                  "description": "must be of at least 3 characters"
                }
              ],
              "description": "Search the profiles for the agent with nicknames starting with the given nicknamePrefix"
            },
            {
              "kind": "method",
              "name": "createProfile",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile"
                  },
                  "description": "profile to be created"
                }
              ],
              "description": "Create my profile\n\nNote that there is no guarantee on nickname uniqness"
            },
            {
              "kind": "method",
              "name": "updateProfile",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile"
                  },
                  "description": "profile to be created"
                }
              ],
              "description": "Update my profile"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProfilesStore",
          "declaration": {
            "name": "ProfilesStore",
            "module": "src/profiles-store.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/definitions/agent-avatar.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AA",
          "superclass": {
            "name": "AgentAvatar",
            "module": "/src/elements/agent-avatar"
          },
          "tagName": "agent-avatar",
          "customElement": true,
          "attributes": [
            {
              "name": "agent-pub-key",
              "type": {
                "text": "AgentPubKeyB64"
              },
              "description": "REQUIRED. The public key identifying the agent whose profile is going to be shown.",
              "fieldName": "agentPubKey",
              "inheritedFrom": {
                "name": "AgentAvatar",
                "module": "src/elements/agent-avatar.ts"
              }
            },
            {
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "32",
              "description": "Size of the avatar image in pixels.",
              "fieldName": "size",
              "inheritedFrom": {
                "name": "AgentAvatar",
                "module": "src/elements/agent-avatar.ts"
              }
            },
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "fieldName": "store",
              "inheritedFrom": {
                "name": "AgentAvatar",
                "module": "src/elements/agent-avatar.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "agentPubKey",
              "type": {
                "text": "AgentPubKeyB64"
              },
              "description": "REQUIRED. The public key identifying the agent whose profile is going to be shown.",
              "attribute": "agent-pub-key",
              "inheritedFrom": {
                "name": "AgentAvatar",
                "module": "src/elements/agent-avatar.ts"
              }
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "32",
              "description": "Size of the avatar image in pixels.",
              "attribute": "size",
              "inheritedFrom": {
                "name": "AgentAvatar",
                "module": "src/elements/agent-avatar.ts"
              }
            },
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "attribute": "store",
              "inheritedFrom": {
                "name": "AgentAvatar",
                "module": "src/elements/agent-avatar.ts"
              }
            },
            {
              "kind": "field",
              "name": "_profileTask",
              "default": "new TaskSubscriber(\n    this,\n    () => this.store.fetchAgentProfile(this.agentPubKey),\n    () => [this.store, this.agentPubKey]\n  )",
              "inheritedFrom": {
                "name": "AgentAvatar",
                "module": "src/elements/agent-avatar.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderIdenticon",
              "inheritedFrom": {
                "name": "AgentAvatar",
                "module": "src/elements/agent-avatar.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderProfile",
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "AgentAvatar",
                "module": "src/elements/agent-avatar.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "agent-avatar",
          "declaration": {
            "name": "AA",
            "module": "src/definitions/agent-avatar.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/definitions/create-profile.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CP",
          "superclass": {
            "name": "CreateProfile",
            "module": "/src/elements/create-profile"
          },
          "tagName": "create-profile",
          "customElement": true,
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "fieldName": "store",
              "inheritedFrom": {
                "name": "CreateProfile",
                "module": "src/elements/create-profile.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "attribute": "store",
              "inheritedFrom": {
                "name": "CreateProfile",
                "module": "src/elements/create-profile.ts"
              }
            },
            {
              "kind": "method",
              "name": "createProfile",
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile"
                  }
                }
              ],
              "description": "Private properties",
              "inheritedFrom": {
                "name": "CreateProfile",
                "module": "src/elements/create-profile.ts"
              }
            }
          ],
          "events": [
            {
              "name": "profile-created",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired after the profile has been created. Detail will have this shape: { profile: { nickname, fields } }",
              "inheritedFrom": {
                "name": "CreateProfile",
                "module": "src/elements/create-profile.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "create-profile",
          "declaration": {
            "name": "CP",
            "module": "src/definitions/create-profile.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/definitions/list-profiles.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "LP",
          "superclass": {
            "name": "ListProfiles",
            "module": "/src/elements/list-profiles"
          },
          "tagName": "list-profiles",
          "customElement": true,
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "fieldName": "store",
              "inheritedFrom": {
                "name": "ListProfiles",
                "module": "src/elements/list-profiles.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "attribute": "store",
              "inheritedFrom": {
                "name": "ListProfiles",
                "module": "src/elements/list-profiles.ts"
              }
            },
            {
              "kind": "field",
              "name": "_allProfilesTask",
              "privacy": "private",
              "default": "new TaskSubscriber(\n    this,\n    () => this.store.fetchAllProfiles(),\n    () => [this.store]\n  )",
              "description": "Private properties",
              "inheritedFrom": {
                "name": "ListProfiles",
                "module": "src/elements/list-profiles.ts"
              }
            },
            {
              "kind": "method",
              "name": "initials",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "nickname",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ListProfiles",
                "module": "src/elements/list-profiles.ts"
              }
            },
            {
              "kind": "method",
              "name": "fireAgentSelected",
              "parameters": [
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ListProfiles",
                "module": "src/elements/list-profiles.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderList",
              "parameters": [
                {
                  "name": "profiles",
                  "type": {
                    "text": "Record<AgentPubKeyB64, Profile>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ListProfiles",
                "module": "src/elements/list-profiles.ts"
              }
            }
          ],
          "events": [
            {
              "name": "agent-selected",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when the user selects an agent from the list. Detail will have this shape: { agentPubKey: 'uhCAkSEspAJks5Q8863Jg1RJhuJHJpFWzwDJkxVjVSk9JueU' }",
              "inheritedFrom": {
                "name": "ListProfiles",
                "module": "src/elements/list-profiles.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "list-profiles",
          "declaration": {
            "name": "LP",
            "module": "src/definitions/list-profiles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/definitions/my-profile.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MP",
          "superclass": {
            "name": "MyProfile",
            "module": "/src/elements/my-profile"
          },
          "tagName": "my-profile",
          "customElement": true,
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "fieldName": "store",
              "inheritedFrom": {
                "name": "MyProfile",
                "module": "src/elements/my-profile.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "attribute": "store",
              "inheritedFrom": {
                "name": "MyProfile",
                "module": "src/elements/my-profile.ts"
              }
            },
            {
              "kind": "field",
              "name": "_editing",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "description": "Private properties",
              "inheritedFrom": {
                "name": "MyProfile",
                "module": "src/elements/my-profile.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "my-profile",
          "declaration": {
            "name": "MP",
            "module": "src/definitions/my-profile.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/definitions/profile-detail.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PD",
          "superclass": {
            "name": "ProfileDetail",
            "module": "/src/elements/profile-detail"
          },
          "tagName": "profile-detail",
          "customElement": true,
          "attributes": [
            {
              "name": "agent-pub-key",
              "type": {
                "text": "AgentPubKeyB64"
              },
              "description": "REQUIRED. Public key identifying the agent for which the profile should be shown",
              "fieldName": "agentPubKey",
              "inheritedFrom": {
                "name": "ProfileDetail",
                "module": "src/elements/profile-detail.ts"
              }
            },
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "fieldName": "store",
              "inheritedFrom": {
                "name": "ProfileDetail",
                "module": "src/elements/profile-detail.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "agentPubKey",
              "type": {
                "text": "AgentPubKeyB64"
              },
              "description": "REQUIRED. Public key identifying the agent for which the profile should be shown",
              "attribute": "agent-pub-key",
              "inheritedFrom": {
                "name": "ProfileDetail",
                "module": "src/elements/profile-detail.ts"
              }
            },
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "attribute": "store",
              "inheritedFrom": {
                "name": "ProfileDetail",
                "module": "src/elements/profile-detail.ts"
              }
            },
            {
              "kind": "field",
              "name": "_agentProfileTask",
              "privacy": "private",
              "default": "new TaskSubscriber(\n    this,\n    () => this.store.fetchAgentProfile(this.agentPubKey),\n    () => [this.store, this.agentPubKey]\n  )",
              "description": "Private properties",
              "inheritedFrom": {
                "name": "ProfileDetail",
                "module": "src/elements/profile-detail.ts"
              }
            },
            {
              "kind": "method",
              "name": "getAdditionalFields",
              "return": {
                "type": {
                  "text": "Record<string, string>"
                }
              },
              "inheritedFrom": {
                "name": "ProfileDetail",
                "module": "src/elements/profile-detail.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderAdditionalField",
              "parameters": [
                {
                  "name": "fieldId",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "fieldValue",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ProfileDetail",
                "module": "src/elements/profile-detail.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderProfile",
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ProfileDetail",
                "module": "src/elements/profile-detail.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "profile-detail",
          "declaration": {
            "name": "PD",
            "module": "src/definitions/profile-detail.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/definitions/profile-prompt.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PP",
          "superclass": {
            "name": "ProfilePrompt",
            "module": "/src/elements/profile-prompt"
          },
          "tagName": "profile-prompt",
          "customElement": true,
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "fieldName": "store",
              "inheritedFrom": {
                "name": "ProfilePrompt",
                "module": "src/elements/profile-prompt.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "attribute": "store",
              "inheritedFrom": {
                "name": "ProfilePrompt",
                "module": "src/elements/profile-prompt.ts"
              }
            },
            {
              "kind": "field",
              "name": "_myProfileTask",
              "privacy": "private",
              "default": "new TaskSubscriber(\n    this,\n    () => this.store.fetchMyProfile(),\n    () => [this.store]\n  )",
              "description": "Private properties",
              "inheritedFrom": {
                "name": "ProfilePrompt",
                "module": "src/elements/profile-prompt.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderPrompt",
              "parameters": [
                {
                  "name": "myProfile",
                  "type": {
                    "text": "Profile | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ProfilePrompt",
                "module": "src/elements/profile-prompt.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "profile-prompt",
          "declaration": {
            "name": "PP",
            "module": "src/definitions/profile-prompt.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/definitions/profiles-context.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PC",
          "superclass": {
            "name": "ProfilesContext",
            "module": "/src/elements/profiles-context"
          },
          "tagName": "profiles-context",
          "customElement": true,
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "fieldName": "store",
              "inheritedFrom": {
                "name": "ProfilesContext",
                "module": "src/elements/profiles-context.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "attribute": "store",
              "inheritedFrom": {
                "name": "ProfilesContext",
                "module": "src/elements/profiles-context.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "profiles-context",
          "declaration": {
            "name": "PC",
            "module": "src/definitions/profiles-context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/definitions/search-agent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SA",
          "superclass": {
            "name": "SearchAgent",
            "module": "/src/elements/search-agent"
          },
          "tagName": "search-agent",
          "customElement": true,
          "attributes": [
            {
              "name": "clear-on-select",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to clear the field when an agent is selected.",
              "fieldName": "clearOnSelect",
              "attribute": "clear-on-select",
              "inheritedFrom": {
                "name": "SearchAgent",
                "module": "src/elements/search-agent.ts"
              }
            },
            {
              "name": "include-myself",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to include my own agent as a possible agent to select.",
              "fieldName": "includeMyself",
              "attribute": "include-myself",
              "inheritedFrom": {
                "name": "SearchAgent",
                "module": "src/elements/search-agent.ts"
              }
            },
            {
              "name": "field-label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Label for the agent searching field.",
              "fieldName": "fieldLabel",
              "attribute": "field-label",
              "inheritedFrom": {
                "name": "SearchAgent",
                "module": "src/elements/search-agent.ts"
              }
            },
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "fieldName": "store",
              "inheritedFrom": {
                "name": "SearchAgent",
                "module": "src/elements/search-agent.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "clearOnSelect",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to clear the field when an agent is selected.",
              "attribute": "clear-on-select",
              "inheritedFrom": {
                "name": "SearchAgent",
                "module": "src/elements/search-agent.ts"
              }
            },
            {
              "kind": "field",
              "name": "includeMyself",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to include my own agent as a possible agent to select.",
              "attribute": "include-myself",
              "inheritedFrom": {
                "name": "SearchAgent",
                "module": "src/elements/search-agent.ts"
              }
            },
            {
              "kind": "field",
              "name": "fieldLabel",
              "type": {
                "text": "string | undefined"
              },
              "description": "Label for the agent searching field.",
              "attribute": "field-label",
              "inheritedFrom": {
                "name": "SearchAgent",
                "module": "src/elements/search-agent.ts"
              }
            },
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "attribute": "store",
              "inheritedFrom": {
                "name": "SearchAgent",
                "module": "src/elements/search-agent.ts"
              }
            },
            {
              "kind": "field",
              "name": "_knownProfiles",
              "type": {
                "text": "Record<AgentPubKeyB64, Profile>"
              },
              "privacy": "private",
              "default": "{}",
              "description": "Private properties",
              "inheritedFrom": {
                "name": "SearchAgent",
                "module": "src/elements/search-agent.ts"
              }
            },
            {
              "kind": "field",
              "name": "_filteredAgents",
              "type": {
                "text": "Array<AgentProfile>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "SearchAgent",
                "module": "src/elements/search-agent.ts"
              }
            },
            {
              "kind": "field",
              "name": "_currentFilter",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private",
              "default": "undefined",
              "inheritedFrom": {
                "name": "SearchAgent",
                "module": "src/elements/search-agent.ts"
              }
            },
            {
              "kind": "field",
              "name": "_lastSearchedPrefix",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private",
              "default": "undefined",
              "inheritedFrom": {
                "name": "SearchAgent",
                "module": "src/elements/search-agent.ts"
              }
            },
            {
              "kind": "field",
              "name": "_textField",
              "type": {
                "text": "TextField"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "SearchAgent",
                "module": "src/elements/search-agent.ts"
              }
            },
            {
              "kind": "field",
              "name": "_overlay",
              "type": {
                "text": "MenuSurface"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "SearchAgent",
                "module": "src/elements/search-agent.ts"
              }
            },
            {
              "kind": "method",
              "name": "searchAgents",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "nicknamePrefix",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "SearchAgent",
                "module": "src/elements/search-agent.ts"
              }
            },
            {
              "kind": "method",
              "name": "onFilterChange",
              "inheritedFrom": {
                "name": "SearchAgent",
                "module": "src/elements/search-agent.ts"
              }
            },
            {
              "kind": "method",
              "name": "onUsernameSelected",
              "parameters": [
                {
                  "name": "agent",
                  "type": {
                    "text": "AgentProfile"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "SearchAgent",
                "module": "src/elements/search-agent.ts"
              }
            }
          ],
          "events": [
            {
              "name": "agent-selected",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when the user selects some agent. Detail will have this shape: { agentPubKey: 'uhCAkSEspAJks5Q8863Jg1RJhuJHJpFWzwDJkxVjVSk9JueU' }",
              "inheritedFrom": {
                "name": "SearchAgent",
                "module": "src/elements/search-agent.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "search-agent",
          "declaration": {
            "name": "SA",
            "module": "src/definitions/search-agent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/definitions/update-profile.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "UP",
          "superclass": {
            "name": "UpdateProfile",
            "module": "/src/elements/update-profile"
          },
          "tagName": "update-profile",
          "customElement": true,
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "fieldName": "store",
              "inheritedFrom": {
                "name": "UpdateProfile",
                "module": "src/elements/update-profile.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "attribute": "store",
              "inheritedFrom": {
                "name": "UpdateProfile",
                "module": "src/elements/update-profile.ts"
              }
            },
            {
              "kind": "field",
              "name": "_myProfileTask",
              "privacy": "private",
              "default": "new TaskSubscriber(\n    this,\n    () => this.store.fetchMyProfile(),\n    () => [this.store]\n  )",
              "description": "Private properties",
              "inheritedFrom": {
                "name": "UpdateProfile",
                "module": "src/elements/update-profile.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateProfile",
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "UpdateProfile",
                "module": "src/elements/update-profile.ts"
              }
            }
          ],
          "events": [
            {
              "name": "profile-updated",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired after the profile has been created. Detail will have this shape: { profile: { nickname, fields } }",
              "inheritedFrom": {
                "name": "UpdateProfile",
                "module": "src/elements/update-profile.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "update-profile",
          "declaration": {
            "name": "UP",
            "module": "src/definitions/update-profile.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/agent-avatar.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AgentAvatar",
          "members": [
            {
              "kind": "field",
              "name": "agentPubKey",
              "type": {
                "text": "AgentPubKeyB64"
              },
              "description": "REQUIRED. The public key identifying the agent whose profile is going to be shown.",
              "attribute": "agent-pub-key"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "32",
              "description": "Size of the avatar image in pixels.",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "attribute": "store"
            },
            {
              "kind": "field",
              "name": "_profileTask",
              "default": "new TaskSubscriber(\n    this,\n    () => this.store.fetchAgentProfile(this.agentPubKey),\n    () => [this.store, this.agentPubKey]\n  )"
            },
            {
              "kind": "method",
              "name": "renderIdenticon"
            },
            {
              "kind": "method",
              "name": "renderProfile",
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile | undefined"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "agent-pub-key",
              "type": {
                "text": "AgentPubKeyB64"
              },
              "description": "REQUIRED. The public key identifying the agent whose profile is going to be shown.",
              "fieldName": "agentPubKey"
            },
            {
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "32",
              "description": "Size of the avatar image in pixels.",
              "fieldName": "size"
            },
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "fieldName": "store"
            }
          ],
          "mixins": [
            {
              "name": "ScopedElementsMixin",
              "package": "@open-wc/scoped-elements"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AgentAvatar",
          "declaration": {
            "name": "AgentAvatar",
            "module": "src/elements/agent-avatar.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/create-profile.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A custom element that fires event on value change.",
          "name": "CreateProfile",
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "attribute": "store"
            },
            {
              "kind": "method",
              "name": "createProfile",
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile"
                  }
                }
              ],
              "description": "Private properties"
            }
          ],
          "events": [
            {
              "name": "profile-created",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired after the profile has been created. Detail will have this shape: { profile: { nickname, fields } }"
            }
          ],
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "fieldName": "store"
            }
          ],
          "mixins": [
            {
              "name": "ScopedElementsMixin",
              "package": "@open-wc/scoped-elements"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "create-profile",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CreateProfile",
          "declaration": {
            "name": "CreateProfile",
            "module": "src/elements/create-profile.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/edit-profile.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "EditProfile",
          "members": [
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "Profile | undefined"
              },
              "description": "The profile to be edited.",
              "attribute": "profile"
            },
            {
              "kind": "field",
              "name": "saveProfileLabel",
              "type": {
                "text": "string | undefined"
              },
              "description": "Label for the save profile button.",
              "attribute": "save-profile-label"
            },
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "attribute": "store"
            },
            {
              "kind": "field",
              "name": "_nicknameField",
              "type": {
                "text": "TextField"
              },
              "privacy": "private",
              "description": "Private properties"
            },
            {
              "kind": "field",
              "name": "_existingUsernames",
              "type": {
                "text": "{ [key: string]: boolean }"
              },
              "privacy": "private",
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "_avatarFilePicker",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_avatar",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onAvatarUploaded"
            },
            {
              "kind": "method",
              "name": "avatarMode"
            },
            {
              "kind": "method",
              "name": "renderAvatar"
            },
            {
              "kind": "method",
              "name": "shouldSaveButtonBeEnabled"
            },
            {
              "kind": "method",
              "name": "textfieldToFieldId",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "field",
                  "type": {
                    "text": "TextField"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getAdditionalFieldsValues",
              "return": {
                "type": {
                  "text": "Dictionary<string>"
                }
              }
            },
            {
              "kind": "method",
              "name": "getAdditionalTextFields",
              "return": {
                "type": {
                  "text": "Dictionary<TextField>"
                }
              }
            },
            {
              "kind": "method",
              "name": "fireSaveProfile"
            },
            {
              "kind": "method",
              "name": "renderField",
              "parameters": [
                {
                  "name": "fieldName",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "save-profile",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when the save profile button is clicked"
            }
          ],
          "attributes": [
            {
              "name": "profile",
              "type": {
                "text": "Profile | undefined"
              },
              "description": "The profile to be edited.",
              "fieldName": "profile"
            },
            {
              "name": "save-profile-label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Label for the save profile button.",
              "fieldName": "saveProfileLabel"
            },
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "fieldName": "store"
            }
          ],
          "mixins": [
            {
              "name": "ScopedElementsMixin",
              "package": "@open-wc/scoped-elements"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "edit-profile",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "EditProfile",
          "declaration": {
            "name": "EditProfile",
            "module": "src/elements/edit-profile.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/list-profiles.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ListProfiles",
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "attribute": "store"
            },
            {
              "kind": "field",
              "name": "_allProfilesTask",
              "privacy": "private",
              "default": "new TaskSubscriber(\n    this,\n    () => this.store.fetchAllProfiles(),\n    () => [this.store]\n  )",
              "description": "Private properties"
            },
            {
              "kind": "method",
              "name": "initials",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "nickname",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "fireAgentSelected",
              "parameters": [
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderList",
              "parameters": [
                {
                  "name": "profiles",
                  "type": {
                    "text": "Record<AgentPubKeyB64, Profile>"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "agent-selected",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when the user selects an agent from the list. Detail will have this shape: { agentPubKey: 'uhCAkSEspAJks5Q8863Jg1RJhuJHJpFWzwDJkxVjVSk9JueU' }"
            }
          ],
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "fieldName": "store"
            }
          ],
          "mixins": [
            {
              "name": "ScopedElementsMixin",
              "package": "@open-wc/scoped-elements"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "list-profiles",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ListProfiles",
          "declaration": {
            "name": "ListProfiles",
            "module": "src/elements/list-profiles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/my-profile.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MyProfile",
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "attribute": "store"
            },
            {
              "kind": "field",
              "name": "_editing",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "description": "Private properties"
            }
          ],
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "fieldName": "store"
            }
          ],
          "mixins": [
            {
              "name": "ScopedElementsMixin",
              "package": "@open-wc/scoped-elements"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "profile-detail",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MyProfile",
          "declaration": {
            "name": "MyProfile",
            "module": "src/elements/my-profile.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/profile-detail.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ProfileDetail",
          "members": [
            {
              "kind": "field",
              "name": "agentPubKey",
              "type": {
                "text": "AgentPubKeyB64"
              },
              "description": "REQUIRED. Public key identifying the agent for which the profile should be shown",
              "attribute": "agent-pub-key"
            },
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "attribute": "store"
            },
            {
              "kind": "field",
              "name": "_agentProfileTask",
              "privacy": "private",
              "default": "new TaskSubscriber(\n    this,\n    () => this.store.fetchAgentProfile(this.agentPubKey),\n    () => [this.store, this.agentPubKey]\n  )",
              "description": "Private properties"
            },
            {
              "kind": "method",
              "name": "getAdditionalFields",
              "return": {
                "type": {
                  "text": "Record<string, string>"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderAdditionalField",
              "parameters": [
                {
                  "name": "fieldId",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "fieldValue",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderProfile",
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile | undefined"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "agent-pub-key",
              "type": {
                "text": "AgentPubKeyB64"
              },
              "description": "REQUIRED. Public key identifying the agent for which the profile should be shown",
              "fieldName": "agentPubKey"
            },
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "fieldName": "store"
            }
          ],
          "mixins": [
            {
              "name": "ScopedElementsMixin",
              "package": "@open-wc/scoped-elements"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "profile-detail",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProfileDetail",
          "declaration": {
            "name": "ProfileDetail",
            "module": "src/elements/profile-detail.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/profile-prompt.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ProfilePrompt",
          "slots": [
            {
              "description": "Will be displayed above the create-profile form when the user is prompted with it",
              "name": "hero"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "attribute": "store"
            },
            {
              "kind": "field",
              "name": "_myProfileTask",
              "privacy": "private",
              "default": "new TaskSubscriber(\n    this,\n    () => this.store.fetchMyProfile(),\n    () => [this.store]\n  )",
              "description": "Private properties"
            },
            {
              "kind": "method",
              "name": "renderPrompt",
              "parameters": [
                {
                  "name": "myProfile",
                  "type": {
                    "text": "Profile | undefined"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "fieldName": "store"
            }
          ],
          "mixins": [
            {
              "name": "ScopedElementsMixin",
              "package": "@open-wc/scoped-elements"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "profile-prompt",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProfilePrompt",
          "declaration": {
            "name": "ProfilePrompt",
            "module": "src/elements/profile-prompt.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/profiles-context.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ProfilesContext",
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "attribute": "store"
            }
          ],
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "fieldName": "store"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProfilesContext",
          "declaration": {
            "name": "ProfilesContext",
            "module": "src/elements/profiles-context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/search-agent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SearchAgent",
          "members": [
            {
              "kind": "field",
              "name": "clearOnSelect",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to clear the field when an agent is selected.",
              "attribute": "clear-on-select"
            },
            {
              "kind": "field",
              "name": "includeMyself",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to include my own agent as a possible agent to select.",
              "attribute": "include-myself"
            },
            {
              "kind": "field",
              "name": "fieldLabel",
              "type": {
                "text": "string | undefined"
              },
              "description": "Label for the agent searching field.",
              "attribute": "field-label"
            },
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "attribute": "store"
            },
            {
              "kind": "field",
              "name": "_knownProfiles",
              "type": {
                "text": "Record<AgentPubKeyB64, Profile>"
              },
              "privacy": "private",
              "default": "{}",
              "description": "Private properties"
            },
            {
              "kind": "field",
              "name": "_filteredAgents",
              "type": {
                "text": "Array<AgentProfile>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_currentFilter",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private",
              "default": "undefined"
            },
            {
              "kind": "field",
              "name": "_lastSearchedPrefix",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private",
              "default": "undefined"
            },
            {
              "kind": "field",
              "name": "_textField",
              "type": {
                "text": "TextField"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_overlay",
              "type": {
                "text": "MenuSurface"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "searchAgents",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "nicknamePrefix",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onFilterChange"
            },
            {
              "kind": "method",
              "name": "onUsernameSelected",
              "parameters": [
                {
                  "name": "agent",
                  "type": {
                    "text": "AgentProfile"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "agent-selected",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when the user selects some agent. Detail will have this shape: { agentPubKey: 'uhCAkSEspAJks5Q8863Jg1RJhuJHJpFWzwDJkxVjVSk9JueU' }"
            }
          ],
          "attributes": [
            {
              "name": "clear-on-select",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to clear the field when an agent is selected.",
              "fieldName": "clearOnSelect",
              "attribute": "clear-on-select"
            },
            {
              "name": "include-myself",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to include my own agent as a possible agent to select.",
              "fieldName": "includeMyself",
              "attribute": "include-myself"
            },
            {
              "name": "field-label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Label for the agent searching field.",
              "fieldName": "fieldLabel",
              "attribute": "field-label"
            },
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "fieldName": "store"
            }
          ],
          "mixins": [
            {
              "name": "ScopedElementsMixin",
              "package": "@open-wc/scoped-elements"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "search-agent",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SearchAgent",
          "declaration": {
            "name": "SearchAgent",
            "module": "src/elements/search-agent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/update-profile.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "UpdateProfile",
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "attribute": "store"
            },
            {
              "kind": "field",
              "name": "_myProfileTask",
              "privacy": "private",
              "default": "new TaskSubscriber(\n    this,\n    () => this.store.fetchMyProfile(),\n    () => [this.store]\n  )",
              "description": "Private properties"
            },
            {
              "kind": "method",
              "name": "updateProfile",
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "profile-updated",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired after the profile has been created. Detail will have this shape: { profile: { nickname, fields } }"
            }
          ],
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "`ProfilesStore` that is requested via context.\nOnly set this property if you want to override the store requested via context.",
              "fieldName": "store"
            }
          ],
          "mixins": [
            {
              "name": "ScopedElementsMixin",
              "package": "@open-wc/scoped-elements"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "update-profile",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "UpdateProfile",
          "declaration": {
            "name": "UpdateProfile",
            "module": "src/elements/update-profile.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "test/mocks/index.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getAppWebsocket"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getAppWebsocket",
          "declaration": {
            "name": "getAppWebsocket",
            "module": "test/mocks/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "test/mocks/profiles.mock.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ProfilesMock",
          "members": [
            {
              "kind": "method",
              "name": "create_profile",
              "parameters": [
                {
                  "name": "{ username }"
                },
                {
                  "name": "provenance"
                }
              ]
            },
            {
              "kind": "method",
              "name": "search_profiles",
              "parameters": [
                {
                  "name": "{ username_prefix }"
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_my_profile",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "provenance"
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_agent_profile",
              "parameters": [
                {
                  "name": "{ agent_address }"
                }
              ]
            },
            {
              "kind": "method",
              "name": "findAgent",
              "parameters": [
                {
                  "name": "agent_address"
                }
              ]
            },
            {
              "kind": "field",
              "name": "agents",
              "type": {
                "text": "array"
              },
              "default": "[]"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProfilesMock",
          "declaration": {
            "name": "ProfilesMock",
            "module": "test/mocks/profiles.mock.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/utils/image.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "resizeAndExport",
          "parameters": [
            {
              "name": "img",
              "type": {
                "text": "HTMLImageElement"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "resizeAndExport",
          "declaration": {
            "name": "resizeAndExport",
            "module": "src/elements/utils/image.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/utils/shared-styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "sharedStyles",
          "default": "css`\n  .row {\n    display: flex;\n    flex-direction: row;\n  }\n  .column {\n    display: flex;\n    flex-direction: column;\n  }\n  .small-margin {\n    margin-top: 6px;\n  }\n  .big-margin {\n    margin-top: 23px;\n  }\n\n  .fill {\n    flex: 1;\n    height: 100%;\n  }\n\n  .title {\n    font-size: 20px;\n  }\n\n  .center-content {\n    align-items: center;\n    justify-content: center;\n  }\n\n  .placeholder {\n    color: rgba(0, 0, 0, 0.7);\n  }\n\n  .label {\n    color: var(--mdc-text-field-label-ink-color, rgba(0, 0, 0, 0.6));\n    font-family: var(\n      --mdc-typography-caption-font-family,\n      var(--mdc-typography-font-family, Roboto, sans-serif)\n    );\n    font-size: var(--mdc-typography-caption-font-size, 0.79rem);\n    font-weight: var(--mdc-typography-caption-font-weight, 400);\n  }\n`"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sharedStyles",
          "declaration": {
            "name": "sharedStyles",
            "module": "src/elements/utils/shared-styles.ts"
          }
        }
      ]
    }
  ]
}
